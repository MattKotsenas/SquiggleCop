<Project>
  <PropertyGroup Condition=" '$(IsTestProject)' == 'true' ">
    <!-- Enable test logging to TRX files and place them in the artifacts directory -->
    <VSTestLogger>trx%3bLogFileName=$(MSBuildProjectName).trx</VSTestLogger>
    <VSTestResultsDirectory Condition="'$(VSTestResultsDirectory)' == ''">$(ArtifactsTestResultsPath)/$(TargetFramework)</VSTestResultsDirectory>

    <_TestCoverageGlob>$(ArtifactsTestResultsPath)/**/*.cobertura.xml</_TestCoverageGlob>
    <_TestCoverageReportDirectory>$(ArtifactsTestResultsPath)/coverage</_TestCoverageReportDirectory>
  </PropertyGroup>

  <Target Name="CleanCoverageReport" BeforeTargets="Test;VSTest" Condition=" '$(IsTestProject)' == 'true' ">
    <!-- Prevent previous runs' coverage files from being merged into this report run. -->
    <RemoveDir Directories="$(_TestCoverageReportDirectory)" />

    <ItemGroup>
      <_CoverageFiles Include="$(_TestCoverageGlob)" />
    </ItemGroup>
    <Delete Files="@(_CoverageFiles)" />
    <ItemGroup>
      <_CoverageFiles Remove="@(_CoverageFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="GenerateCoverageReport" AfterTargets="Test;VSTest" Condition=" '$(IsTestProject)' == 'true' ">
    <ItemGroup>
      <_CoverageFiles Include="$(_TestCoverageGlob)" />
    </ItemGroup>
    <ReportGenerator
      Condition=" '@(_CoverageFiles)' != '' "
      ProjectDirectory="$(MSBuildProjectDirectory)"
      ReportFiles="@(_CoverageFiles)"
      TargetDirectory="$(_TestCoverageReportDirectory)"
      ReportTypes="MarkdownSummaryGithub;Cobertura;HtmlInline" />
  </Target>
</Project>